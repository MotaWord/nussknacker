version: '2.1'

services:

  app:
    build:
      context: app
      args:
        #TODO: consider sth like:
        #curl -s https://api.github.com/repos/touk/nussknacker/releases/latest | grep tag_name | awk '{ print $2 }' | sed -e 's/"//g' -e 's/,//g'
        #to retrieve latest version
        version: ${NUSSKNACKER_VERSION}
    links:
      - "jobmanager:jobmanager"
      - "kafka:kafka"
      - "grafana:grafana"
      - "zookeeper:zookeeper"
    expose:
      - "8080"
    volumes:
      - ./app/conf:/conf
      - ./app/build/nussknacker-ui-assembly.jar:/nussknacker-ui-assembly.jar
      - ./app/build/ipmModel.jar:/ipmModel.jar
      - sharedStorage:/opt/flinkData/savepoints
  jobmanager:
    build: flink
    expose:
      - "6123"
      - "8081"
    command: jobmanager
    depends_on:
      - zookeeper
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    links:
      - "influxdb:influxdb"
      - "zookeeper:zookeeper"
    volumes:
      - ./flink/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
      - sharedStorage:/opt/flinkData/savepoints

  taskmanager:
    build: flink
    depends_on:
      - jobmanager
    command: taskmanager
    links:
      - "influxdb:influxdb"
      - "jobmanager:jobmanager"
      - "kafka:kafka"
      - "zookeeper:zookeeper"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./flink/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
    ulimits:
      nproc: 70000
      nofile:
        soft: 70000
        hard: 70000

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    expose:
      - "2181"
  kafka:
    image: wurstmeister/kafka:0.10.2.1
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_HEAP_OPTS: -Xms128m -Xmx512m
    links:
      - "zookeeper:zookeeper"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.4.1
    environment:
      ES_JAVA_OPTS: -Xms128m -Xmx512m
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    expose:
      - "9200"
      - "9300"
    ulimits:
      nproc: 70000
      nofile:
        soft: 70000
        hard: 70000

  logstash:
    image: docker.elastic.co/logstash/logstash:5.4.1
    links:
      - elasticsearch
      - kafka
    expose:
        - "5000"
    depends_on:
      - elasticsearch
      - kafka
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline:/usr/share/logstash/pipeline
  kibana:
    image: docker.elastic.co/kibana/kibana:5.4.1
    expose:
      - "5601"
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    volumes:
      - ./kibana/config/:/usr/share/kibana/config

  influxdb:
    image: influxdb:1.1
    command: ["/runWithEspDb.sh"]
    volumes:
      - ./influxdb/runWithEspDb.sh:/runWithEspDb.sh
      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
    expose:
      - "2003/udp"
  grafana:
    image: grafana/grafana:5.1.5
    entrypoint: ["/runWithFlinkEspBoard.sh"]
    volumes:
      - ./grafana/runWithFlinkEspBoard.sh:/runWithFlinkEspBoard.sh
      - ./grafana/Flink-ESP.json:/Flink-ESP.json
    links:
      - "influxdb:influxdb"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:/grafana

  nginx:
    image: nginx
    ports:
      - "8081:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    links:
      - kibana
      - grafana
      - app
      - jobmanager


volumes:
  sharedStorage: {}
